/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        }
    };

    macros {
        ws: workspace_shift {
            label = "ZM_workspace_shift";
            compatible = "zmk,behavior-macro-one-param";
            bindings
                = <&macro_press &kp LCTRL &kp K_APP>
                , <&macro_param_1to1>
                , <&macro_press &kp MACRO_PLACEHOLDER>
                , <&macro_release &kp LCTRL &kp K_APP>
                ;
        };

        workspace_left: workspace_left {
            label = "ZM_workspace_left";
            compatible = "zmk,behavior-macro";
            bindings
                = <&macro_press &kp LCTRL &kp K_APP>
                , <&macro_press &kp LEFT>
                , <&macro_release &kp LCTRL &kp K_APP>
                ;
        };

        workspace_right: workspace_right {
            label = "ZM_workspace_right";
            compatible = "zmk,behavior-macro";
            bindings
                = <&macro_press &kp LCTRL &kp K_APP>
                , <&macro_press &kp RIGHT>
                , <&macro_release &kp LCTRL &kp K_APP>
                ;
        };

        alt_f4: alt_f4 {
            label = "ZM_alt_f4";
            compatible = "zmk,behavior-macro";
            bindings
                = <&macro_tap &kp LALT &kp F4>
                ;
        };

        gbp: gbp_symbol {
            label = "ZM_gbp_symbol";
            compatible = "zmk,behavior-macro";
            bindings
                = <&macro_down &kp LALT>
                , <&macro_tap &kp N1>
                , <&macro_tap &kp N5>
                , <&macro_tap &kp N6>
                , <&macro_release &kp LALT>
                ;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  '  |  ,  |  .  |  P  |  Y  |   |  F  |  G   |  C  |  R  |  L  | BKSP |
// | CTRL |  A  |  O  |  E  |  U  |  I  |   |  D  |  H   |  T  |  N  |  S  |  -   |
// | SHFT |  ;  |  Q  |  J  |  K  |  X  |   |  B  |  M   |  W  |  V  |  Z  | ESC  |
//                    | ALT | SYM | ENT |   | SPC | NUM  | APP |
            bindings = <
    &kp TAB   &kp SQT  &kp COMMA &kp DOT  &kp P &kp Y         &kp F     &kp G &kp C &kp R &kp L &kp BSPC
    &kp LCTRL &kp A    &kp O     &kp E    &kp U &kp I         &kp D     &kp H &kp T &kp N &kp S &kp MINUS
    &kp LSHFT &kp SEMI &kp Q     &kp J    &kp K &kp X         &kp B     &kp M &kp W &kp V &kp Z &kp ESC
                                &kp LALT &mo 2 &mt LGUI RET   &kp SPACE &mo 1 &kp K_APP
            >;
            label = "Default";
        };

        number_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT | DEL |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     | INS | SLCK |
//                    |     |     |     |   |     |     | GAM |
            bindings = <
    &trans &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7    &kp N8 &kp N9    &kp N0  &trans
    &trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN  &kp UP &kp RIGHT &kp DEL &trans
    &trans &bt BT_CLR   &none        &none        &none        &none          &none    &kp RCTRL &none  &none     &kp INS &kp SLCK
                                     &kp LGUI     &trans       &trans         &trans  &trans    &mo 5
            >;
            label = "Numbers";
        };

        symbol_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
            bindings = <
    &trans &kp EXCL  &kp AT   &kp HASH  &kp DLLR     &kp PRCNT   &kp CARET &kp AMPS &kp KP_MULTIPLY &kp LPAR  &kp RPAR  &trans
    &trans &kp PSCRN &gbp     &kp GRAVE &kp QUESTION &kp PLUS    &kp EQUAL &kp LBRC &kp RBRC        &kp SLASH &kp TILDE &kp GRAVE
    &trans &none     &ws LEFT &ws RIGHT &alt_f4      &kp MINUS   &kp PLUS  &kp LBKT &kp RBKT        &kp BSLH  &kp PIPE  &none
                              &trans    &trans       &trans      &trans    &trans   &mo 4
            >;
            label = "Symbols";
        };

        system_mouse_layer {
            bindings = <
    &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
    &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
    &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                                    &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
            >;
            label = "System/mouse";
        };

        function_layer {
                bindings = <
    &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
    &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
    &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                                    &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
            >;
            label = "Function";
        }

        gaming_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
            bindings = <
    &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
    &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
    &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                  &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
            >;
            label = "Gaming";
        };

        bluetooth_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
            bindings = <
    &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
    &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
    &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
            >;
            label = "Bluetooth";
        };
    };
};
